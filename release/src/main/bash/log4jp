#!/bin/bash

function main() {

    local verbose=false
    local debug=false
    local version=false
    local args=""

    # sets verbose, debug, args, ...
    process-command-line $@

    local verbose_option
    local debug_option
    ${verbose} && verbose_option="--verbose"
    ${debug} && debug_option="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005"

    local classpath
    classpath=$(get-classpath $(dirname $0)/../lib) || exit 1

    if ${version}; then

        #
        # "version" handling - "light" version retrieval
        #

        local version=$(get-version)
        if [ -n "${version}" ]; then

            #
            # display and exit
            #
            echo "${version}"
            return 0
        fi

        #
        # we weren't able to handle it satisfactory at the bash level, pass it to the java runtime at the front of
        # the argument list
        #
        args="${command} ${args}"
    fi

    java \
        -cp ${classpath} \
        ${debug_option} \
        io.novaordis.events.log4j.Main \
        ${verbose_option} \
        ${args}
}

#
# gets passed the original command line. The function extracts and sets as global variables clad-specific options
#
# Sets:
#
# verbose - true|false
# debug   - true|false
# version - true|false
#
# args    - the rest of the remaining args
#
#
function process-command-line() {

    args=""

    while [ -n "$1" ]; do

        if [ "$1" = "-v" -o "" = "--verbose" ]; then
            verbose=true
        elif [ "$1" = "-d" -o "" = "--debug" ]; then
            debug=true
        elif [ "$1" = "version" ]; then
            version=true
        else
            [ -z "${args}" ] && args=$1 || args="${args} $1"
        fi
        shift
    done
}

#
# must receive the path to the lib directory
#
function get-classpath() {

    local lib_dir=$1

    [ -z "${lib_dir}" ] && { echo "'lib_dir' not provided" 1>&2; exit 1; }
    [ -d ${lib_dir} ] || { echo "lib_dir ${lib_dir} not a directory" 1>&2; exit 1; }

    local first=true

    #
    # add the lib directory itself at the top of the classpath
    #

    echo -n "${lib_dir}:";

    for i in ${lib_dir}/*.jar; do
        if ${first}; then
            first=false
        else
            echo -n ":"
        fi
        echo -n ${i}
    done
}

#
# "Light" version retrieval. The function attempts to located the VERSION file. If found, and if carrying a valid
# content, it is displayed. Otherwise, the calling layer should pass the command to the java runtime.
#
# See https://kb.novaordis.com/index.php/Nova_Ordis_Utilities_Version_Metadata_Handling#.22Light.22_Version_Reporting
#
function get-version() {

    [ -f $(dirname $0)/../lib/VERSION ] && { cat $(dirname $0)/../lib/VERSION; return 0; }
    return 1
}


main $@